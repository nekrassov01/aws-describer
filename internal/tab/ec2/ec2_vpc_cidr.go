// Code generated by table/gen.go. DO NOT EDIT.

package ec2

import (
	"sort"

	"github.com/nekrassov01/aws-describer/internal/api/ec2"
	"github.com/nekrassov01/aws-describer/internal/tab"
)

func PrintVpcCidrInfo(info []ec2.VpcCidrInfo, output string, header bool, mergeFields, ignoreFields []int) error {
	sort.SliceStable(info, func(i, j int) bool {
		if info[i].Region != info[j].Region {
			return info[i].Region < info[j].Region
		}
		if info[i].VpcName != info[j].VpcName {
			return info[i].VpcName < info[j].VpcName
		}
		if info[i].DhcpOptionsName != info[j].DhcpOptionsName {
			return info[i].DhcpOptionsName < info[j].DhcpOptionsName
		}
		if info[i].OwnerId != info[j].OwnerId {
			return info[i].OwnerId < info[j].OwnerId
		}
		if info[i].IsDefault != info[j].IsDefault {
			return info[i].IsDefault
		}
		if info[i].InstanceTenancy != info[j].InstanceTenancy {
			return info[i].InstanceTenancy < info[j].InstanceTenancy
		}
		if info[i].AddressType != info[j].AddressType {
			return info[i].AddressType < info[j].AddressType
		}
		if info[i].CidrBlock != info[j].CidrBlock {
			return info[i].CidrBlock < info[j].CidrBlock
		}
		return info[i].State < info[j].State
	})
	if len(mergeFields) == 0 {
		mergeFields = []int{0, 1, 2, 3, 4, 5, 6, 7}
	}
	if err := tab.PrintTable(info, output, header, mergeFields, ignoreFields); err != nil {
		return err
	}
	return nil
}
