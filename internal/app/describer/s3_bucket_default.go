// Code generated by describer/s3_gen.go. DO NOT EDIT.

package describer

import (
	"fmt"

	s3api "github.com/nekrassov01/aws-describer/internal/api/s3"
	s3tab "github.com/nekrassov01/aws-describer/internal/tab/s3"
	"github.com/urfave/cli/v2"
)

func (a *app) doBucketInfo(c *cli.Context) error {
	if !c.IsSet(a.flag.document.Name) && c.IsSet(a.flag.documentFilter.Name) {
		return fmt.Errorf("invalid args/flags combination: \"%s\" are valid only when \"%s\" is enabled", a.flag.documentFilter.Name, a.flag.document.Name)
	}
	client := s3api.NewS3Client(a.config)
	info, err := s3api.ListBucketInfo(c.Context, client, a.flag.names.GetDestination(), a.dest.document, a.flag.documentFilter.GetDestination())
	if err != nil {
		return err
	}
	if err := s3tab.PrintBucketInfo(info, a.dest.output, a.dest.header, a.flag.merge.GetDestination(), a.flag.ignore.GetDestination(), a.dest.document); err != nil {
		return err
	}
	return nil
}
